{"version":3,"sources":["composants/depedances/chartConfig.js","data/CryptoList.js","composants/depedances/gameLoop.js","data/BTC.txt","data/ADA.txt","data/BNB.txt","data/ETH.txt","data/SOL.txt","data/XRP.txt","composants/depedances/txtToObject.js","composants/Pages/Menu.js","composants/Pages/Playground.js","App.js","reportWebVitals.js","index.js"],"names":["cryptoChart","cryptolist","yAxisD","display","chart","data","tickPriceData","destroy","dataLabel","referenceLine","i","length","push","dataMin","Math","min","max","dataMax","Chart","document","getElementById","type","options","animation","pointBorderWidth","pointRadius","hoverBorderWidth","hoverRadius","scales","xAxis","yAxis","grid","drawBorder","ticks","beginAtZero","fontSize","fontColor","maxTicksLimit","padding","yAxis1","position","plugins","legend","tooltip","enabled","mode","labels","datasets","label","borderColor","fill","yAxisID","chartDestroy","generateNewDatasAndUpdateChart","currentData","dynamicValues","index","newData","dynamicCurrentPrice","slice","updateCurrentPrice","setCurrentPrice","lastPrice","currentPrice","updateTickPrice","orderPrice","endGame","setStateDatas","navigate","interval","a","playerMonney","newFee","playerCrypto","fee","cryptoUnit","clearInterval","showFile","setCryptoDatas","console","log","cryptoData","BTC","ADA","BNB","ETH","SOL","XRP","fetch","then","r","text","bufferText","JSON","parse","randomData","randomValues","array","rnd","random","startSoft","sellShort","longSell","playerCurrentFee","Menu","stateDatas","useState","cryptoDatas","width","height","graphDisplay","setGraphDisplay","useNavigate","useEffect","graphheightandWidth","window","localStorage","setItem","getItem","innerWidth","innerHeight","bufferDatas","loopControler","setInterval","querySelector","className","htmlFor","id","onChange","e","target","value","map","crypto","onClick","Playground","setPlayerMonney","setSellShort","setLongSell","flagColor","setFlagColor","setPlayerCrypto","setOrderPrice","gain","setGain","drawIndex","setDrawIndex","updateFlag","updateGain","transactionResult","Switch","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.38a06067.chunk.js","sourcesContent":["\r\nimport Chart from \"chart.js/auto\"\r\n\r\n let cryptoChart\r\n export let yAxisD = {display : true}\r\nexport const chart = (data,tickPriceData) => {\r\n    if (cryptoChart )cryptoChart.destroy();\r\n    let dataLabel = []\r\n    let referenceLine = []\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        dataLabel.push(i)\r\n        referenceLine.push(tickPriceData)\r\n    }\r\n    let dataMin = Math.min(...data) - (Math.max(...data) / 1000)\r\n    if (dataMin < 0) dataMin = 0\r\n    const dataMax = Math.max(...data) + (Math.max(...data) / 1000)\r\n    cryptoChart = new Chart(document.getElementById(\"line-chart\"), {\r\n        type: 'line',\r\n        options: {\r\n            animation: false,\r\n            pointBorderWidth: 0,\r\n            pointRadius: 0,\r\n            hoverBorderWidth: 0,\r\n            hoverRadius: 0,\r\n            scales: {\r\n\r\n                xAxis: {\r\n                    display: false,\r\n                },\r\n\r\n                yAxis: {\r\n                    display: yAxisD.display,\r\n                    min:\r\n                        dataMin\r\n                    ,\r\n                    max:\r\n                        dataMax\r\n                    ,\r\n                    grid: {\r\n                        drawBorder: false,\r\n\r\n\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: false,\r\n                        fontSize: 15,\r\n                        fontColor: 'lightgrey',\r\n                        maxTicksLimit: 5,\r\n                        padding: 25,\r\n                    },\r\n\r\n                },\r\n                yAxis1: {\r\n                    type: 'linear',\r\n                    display: false,\r\n                    position: 'right',\r\n            \r\n                    min:\r\n                        dataMin\r\n                    ,\r\n                    max:\r\n                        dataMax\r\n                   ,\r\n                    grid: {\r\n                        drawBorder: false,\r\n\r\n\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: false,\r\n                        fontSize: 15,\r\n                        fontColor: 'red',\r\n                        maxTicksLimit: 1,\r\n                        padding: 25,\r\n                    },\r\n\r\n                }\r\n\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                tooltip: {\r\n                    display: false,\r\n                    enabled: false,\r\n                    mode: 'single',\r\n\r\n                },\r\n            }\r\n        },\r\n        data: {\r\n            labels: dataLabel,\r\n            datasets: [{\r\n                tooltip: false,\r\n                data: data,\r\n                label: \"crytpo\",\r\n                borderColor: \"#6d8700\",\r\n                fill: false,\r\n                yAxisID: 'yAxis',\r\n            },{\r\n                tooltip: false,\r\n                data: referenceLine,\r\n                label: \"crytpo2\",\r\n                borderColor: \"#54001a\",\r\n                fill: false,\r\n                yAxisID: 'yAxis1',\r\n            }]\r\n            \r\n        },\r\n\r\n    });\r\n}\r\nexport const chartUpdate = (newData,dynamicCurrentPrice) => {\r\n    if (cryptoChart.data) {\r\n  \r\n        //cryptoChart.destroy();\r\n        chart(newData,dynamicCurrentPrice)\r\n    }\r\n}\r\nexport const chartDestroy = () => {\r\n    cryptoChart.destroy();\r\n}","export const cryptolist = [\"Bitcoin\",\"ADA\",\"Ether\",\"BNB\",\"Solana\",'XRP',]","\r\nimport { chartUpdate } from \"./chartConfig\"\r\n\r\n\r\nexport const generateNewDatasAndUpdateChart = (currentData, data, dynamicValues) => {\r\n    \r\n        for (let i = dynamicValues.index; i < (500 + dynamicValues.index); i++) {\r\n            currentData.push(data[i])\r\n        }\r\n        currentData.slice(dynamicValues.index, 500 + dynamicValues.index)\r\n        chartUpdate(currentData, dynamicValues.tickPriceData)\r\n    \r\n}\r\n\r\nexport const updateCurrentPrice = (currentData, setCurrentPrice, dynamicValues) => {\r\n    const lastPrice = currentData[currentData.length - 1]\r\n    dynamicValues.currentPrice = lastPrice\r\n    setCurrentPrice(lastPrice)\r\n\r\n}\r\nexport const updateFlag = (dynamicValues, setFlagColor) => {\r\n    if (dynamicValues.longSell === '') {\r\n\r\n        if (dynamicValues.currentPrice > dynamicValues.orderPrice) {\r\n            setFlagColor('green')\r\n        }\r\n        if (dynamicValues.currentPrice <= dynamicValues.orderPrice) {\r\n            setFlagColor('red')\r\n        }\r\n    } else if (dynamicValues.sellShort === '') {\r\n        if (dynamicValues.currentPrice > dynamicValues.orderPrice) {\r\n            setFlagColor('red')\r\n        }\r\n        if (dynamicValues.currentPrice <= dynamicValues.orderPrice) {\r\n            setFlagColor('green')\r\n        }\r\n    } else {\r\n        setFlagColor('transparent')\r\n    }\r\n}\r\nexport const updateTickPrice = (dynamicValues) => {\r\n    if (dynamicValues.orderPrice === 0) {\r\n        dynamicValues.tickPriceData = dynamicValues.currentPrice\r\n    } else {\r\n        dynamicValues.tickPriceData = dynamicValues.orderPrice\r\n    }\r\n\r\n}\r\nexport const updateGain = (setGain, dynamicValues) => {\r\n    if (dynamicValues.orderPrice > 0 && dynamicValues.longSell === '') {\r\n        setGain(((dynamicValues.currentPrice - dynamicValues.orderPrice) * dynamicValues.playerCrypto) - dynamicValues.playerCurrentFee - (dynamicValues.playerCrypto * dynamicValues.currentPrice * dynamicValues.fee))\r\n    } else if (dynamicValues.orderPrice > 0 && dynamicValues.sellShort === '') {\r\n        setGain(((dynamicValues.orderPrice - dynamicValues.currentPrice) * (-dynamicValues.playerCrypto)) - dynamicValues.playerCurrentFee - (- dynamicValues.playerCrypto * dynamicValues.currentPrice * dynamicValues.fee))\r\n    } else {\r\n        setGain(0)\r\n    }\r\n}\r\nexport const endGame = async (setStateDatas, dynamicValues, navigate, interval) => {\r\n    if (dynamicValues.playerMonney === 0) {\r\n        let newFee = (dynamicValues.playerCrypto * dynamicValues.currentPrice) * dynamicValues.fee\r\n        dynamicValues.playerMonney = (dynamicValues.playerCrypto * dynamicValues.currentPrice)\r\n        if (dynamicValues.playerMonney < 0) dynamicValues.playerMonney = dynamicValues.playerMonney * -1\r\n        dynamicValues.playerMonney = dynamicValues.playerMonney - newFee\r\n    }\r\n    setStateDatas({ playerMonney: dynamicValues.playerMonney, cryptoUnit: dynamicValues.cryptoUnit })\r\n    if (interval)clearInterval(interval)\r\n    navigate('/')\r\n}","export default __webpack_public_path__ + \"static/media/BTC.82585eb7.txt\";","export default __webpack_public_path__ + \"static/media/ADA.8e5834d5.txt\";","export default __webpack_public_path__ + \"static/media/BNB.f42ca6e8.txt\";","export default __webpack_public_path__ + \"static/media/ETH.1269a9e2.txt\";","export default __webpack_public_path__ + \"static/media/SOL.360b1f16.txt\";","export default __webpack_public_path__ + \"static/media/XRP.4f902e13.txt\";","import BTC from '../../data/BTC.txt'\r\nimport ADA from '../../data/ADA.txt'\r\nimport BNB from '../../data/BNB.txt'\r\nimport ETH from '../../data/ETH.txt'\r\nimport SOL from '../../data/SOL.txt'\r\nimport XRP from '../../data/XRP.txt'\r\n\r\nexport const showFile = async (setCryptoDatas, cryptoUnit) => {\r\n  let cryptoData\r\n  console.log(cryptoUnit)\r\n  if (cryptoUnit === 'bitcoin') cryptoData = BTC\r\n  else if (cryptoUnit === 'ADA') cryptoData = ADA\r\n  else if (cryptoUnit === 'BNB') cryptoData = BNB\r\n  else if (cryptoUnit === 'Ether') cryptoData = ETH\r\n  else if (cryptoUnit === 'Solana') cryptoData = SOL\r\n  else if (cryptoUnit === 'XRP') cryptoData = XRP\r\n\r\n  fetch(cryptoData)\r\n    .then(r => r.text())\r\n    .then(text => {\r\n      let bufferText = JSON.parse(text)\r\n      randomData(setCryptoDatas, bufferText)\r\n    });\r\n}\r\nconst randomData = (setCryptoDatas, bufferText) => {\r\n  let randomValues = bufferText.array\r\n  let rnd = Math.random() * (randomValues.length - 10000)\r\n  randomValues = randomValues.slice(rnd, rnd + 10000)\r\n  setCryptoDatas(randomValues)\r\n}","import React, { useEffect,useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { cryptolist } from '../../data/CryptoList';\r\nimport { chart, chartDestroy, yAxisD } from '../depedances/chartConfig';\r\nimport { generateNewDatasAndUpdateChart, updateCurrentPrice, updateTickPrice } from '../depedances/gameLoop';\r\nimport { showFile } from '../depedances/txtToObject';\r\n\r\nlet startSoft = false\r\nlet dynamicValues  = { fee: 0.00004, currentPrice: 0, index: 0, sellShort: 'Buy Short', longSell: 'Buy Long', orderPrice: 0, tickPriceData: 0, playerCrypto: 0, playerCurrentFee: 0, playerMonney: 0, cryptoUnit: 'btc' }\r\nconst Menu = ({stateDatas , setStateDatas}) => { \r\n    const [cryptoDatas, setCryptoDatas] = useState()\r\n    const [graphDisplay ,setGraphDisplay] = useState({width:600,height:600})\r\n    const navigate = useNavigate()\r\n    const selectCrypto = (e) => {\r\n        setStateDatas({playerMonney : stateDatas.playerMonney ,cryptoUnit : e.target.value})\r\n    }\r\n  const playGame = () => {\r\n      navigate('/playground')\r\n  }\r\nuseEffect(() => {\r\n    let playerMonney = 0\r\n    graphheightandWidth()\r\n    yAxisD.display = false\r\n    if (!startSoft){\r\n        startSoft = true\r\n        console.log(window.localStorage)\r\n    let localStorage = window.localStorage.getItem('myWallet')\r\n    if (!localStorage) window.localStorage.setItem('myWallet',stateDatas.playerMonney)\r\n    else {\r\n        setStateDatas({playerMonney : localStorage ,cryptoUnit : stateDatas.cryptoUnit}) \r\n        playerMonney = localStorage\r\n    }\r\n}else{\r\n    window.localStorage.setItem('myWallet',stateDatas.playerMonney)\r\n    playerMonney = stateDatas.playerMonney\r\n}\r\nif (playerMonney === 0) {\r\n    setStateDatas({playerMonney : 1000 ,cryptoUnit : stateDatas.cryptoUnit})\r\n    window.localStorage.setItem('myWallet',1000)\r\n}\r\ndynamicValues.index = 0\r\n\r\n    showFile(setCryptoDatas,'bitcoin')\r\n\r\n}, [])\r\nconst graphheightandWidth = () => {\r\n    setGraphDisplay({width: window.innerWidth , height:window.innerHeight})\r\n}\r\nuseEffect(() => {\r\n     if (cryptoDatas) {\r\n    let bufferDatas = []\r\n    for (let i = 0; i < 500; i++) {\r\n        bufferDatas.push(cryptoDatas[i])\r\n    }\r\n    dynamicValues.index = 0\r\n    \r\n    chart(bufferDatas, dynamicValues.currentPrice)\r\n    loopControler()\r\n}\r\n},[cryptoDatas])\r\n\r\nconst loopControler = () => {\r\n    const interval = setInterval(() => {\r\n        if (!document.querySelector('.menu')) {\r\n            chartDestroy()\r\n            clearInterval(interval)\r\n        }\r\n        let currentData = []\r\n        dynamicValues.index++\r\n        updateTickPrice(dynamicValues)\r\n        generateNewDatasAndUpdateChart(currentData, cryptoDatas, dynamicValues)\r\n        \r\n    }, 200)\r\n    return () => clearInterval(interval);\r\n}\r\n    return (\r\n        <div className = \"menu\">\r\n             <h1>CryptoGame</h1>\r\n             <div className=\"main-section\">\r\n            <div className = \"left-section\">\r\n                <div>\r\n                <p>Wallet :</p>\r\n                <div><p>{stateDatas.playerMonney}$</p></div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <label htmlFor = \"crypto\">Crypto :</label>\r\n                <select id =\"crypto\" onChange ={selectCrypto} >\r\n                ${cryptolist.map((crypto ,  index)=> {\r\n                    return <option key = {index}  value = {crypto}>{crypto}</option>\r\n                })}\r\n                </select>\r\n        </div>\r\n        </div>\r\n        <div className = \"play\" onClick ={playGame}><p>Play</p></div>\r\n        <div className=\"menu-chart\">\r\n                <canvas id=\"line-chart\" width={graphDisplay.width+\"px\"} height={graphDisplay.height +\"px\"}></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { chart, chartDestroy, yAxisD } from '../depedances/chartConfig';\r\nimport { endGame, generateNewDatasAndUpdateChart, updateCurrentPrice, updateFlag, updateGain, updateTickPrice } from '../depedances/gameLoop';\r\nimport { showFile } from '../depedances/txtToObject';\r\n\r\n\r\nlet dynamicValues = { fee: 0.00004, currentPrice: 0, index: 0, sellShort: 'Buy Short', longSell: 'Buy Long', orderPrice: 0, tickPriceData: 0, playerCrypto: 0, playerCurrentFee: 0, playerMonney: 0, cryptoUnit: 'btc' }\r\nconst Playground = ({ stateDatas, setStateDatas }) => {\r\n    const [cryptoDatas, setCryptoDatas] = useState()\r\n    const [playerMonney, setPlayerMonney] = useState(0)\r\n    const [currentPrice, setCurrentPrice] = useState(0)\r\n    const [sellShort, setSellShort] = useState('Buy Short')\r\n    const [longSell, setLongSell] = useState('Buy Long')\r\n    const [flagColor, setFlagColor] = useState('transparent')\r\n    const [playerCrypto, setPlayerCrypto] = useState(0)\r\n    const [orderPrice, setOrderPrice] = useState(0)\r\n    const [gain, setGain] = useState(0)\r\n    const [drawIndex, setDrawIndex] = useState(0)\r\n    const [graphDisplay ,setGraphDisplay] = useState({width:600,height:600})\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        yAxisD.display = true\r\n        graphheightandWidth()\r\n        showFile(setCryptoDatas,stateDatas.cryptoUnit)\r\n    }, [])\r\n    const graphheightandWidth = () => {\r\n        setGraphDisplay({width: window.innerWidth , height:(window.innerHeight/1.6)})\r\n    }\r\n    useEffect(() => {\r\n        if (cryptoDatas) {\r\n            \r\n            let bufferDatas = []\r\n            for (let i = 0; i < 500; i++) {\r\n                bufferDatas.push(cryptoDatas[i])\r\n            }\r\n            dynamicValues.index = 0\r\n            setDrawIndex(0)\r\n            updateCurrentPrice(bufferDatas, setCurrentPrice, dynamicValues)\r\n            chart(bufferDatas, dynamicValues.currentPrice)\r\n            dynamicValues.playerMonney = stateDatas.playerMonney\r\n            dynamicValues.cryptoUnit = stateDatas.cryptoUnit\r\n            setPlayerMonney(stateDatas.playerMonney)\r\n            loopControler()\r\n        }\r\n    }, [cryptoDatas])\r\n    const loopControler = () => {\r\n        const interval = setInterval(() => {\r\n            if (!document.querySelector('.playground-main')) {\r\n                chartDestroy()\r\n                clearInterval(interval)\r\n            }\r\n            dynamicValues.index++\r\n            setDrawIndex(dynamicValues.index)\r\n            let currentData = []\r\n            if (document.querySelector('.playground-main')) {\r\n            generateNewDatasAndUpdateChart(currentData, cryptoDatas, dynamicValues)\r\n            updateCurrentPrice(currentData, setCurrentPrice, dynamicValues)\r\n            updateTickPrice(dynamicValues)\r\n            updateFlag(dynamicValues, setFlagColor)\r\n            updateGain(setGain, dynamicValues)\r\n            }\r\n            if (dynamicValues.index >= 9500) {\r\n                endGame(setStateDatas, dynamicValues, navigate, interval)\r\n            }\r\n        }, 200)\r\n        return () => clearInterval(interval);\r\n    }\r\n\r\n    const longOrSell = () => {\r\n        if (dynamicValues.playerMonney > 0) {\r\n            dynamicValues.playerCurrentFee = (stateDatas.playerMonney * dynamicValues.fee)\r\n            const transactionResult = (stateDatas.playerMonney - (stateDatas.playerMonney * dynamicValues.fee)) / currentPrice\r\n            setPlayerCrypto(transactionResult)\r\n            dynamicValues.playerCrypto = transactionResult\r\n            dynamicValues.playerMonney = 0\r\n            setPlayerMonney(0)\r\n            setSellShort('Sell')\r\n            dynamicValues.sellShort = 'Sell'\r\n            setLongSell('')\r\n            dynamicValues.longSell = ''\r\n            setOrderPrice(currentPrice)\r\n            dynamicValues.orderPrice = currentPrice\r\n        } else if (dynamicValues.playerMonney === 0 && playerCrypto < 0) {\r\n        \r\n            dynamicValues.playerMonney = - ((playerCrypto * orderPrice) + ((playerCrypto * orderPrice) - (playerCrypto *  currentPrice)) ) + (playerCrypto * currentPrice  * dynamicValues.fee)\r\n            setPlayerMonney(dynamicValues.playerMonney)\r\n            setPlayerCrypto(0)\r\n            dynamicValues.playerCrypto = 0\r\n            setSellShort('Buy Short')\r\n            dynamicValues.sellShort = 'Buy Short'\r\n            setLongSell('Buy Long')\r\n            dynamicValues.longSell = 'Buy Long'\r\n            setOrderPrice(0)\r\n            dynamicValues.orderPrice = 0\r\n        }\r\n    }\r\n    const shortOrSell = () => {\r\n        if (dynamicValues.playerMonney === 0 && playerCrypto > 0) {\r\n            dynamicValues.playerMonney = playerCrypto * currentPrice - ((playerCrypto * currentPrice) * dynamicValues.fee)\r\n            setPlayerMonney(dynamicValues.playerMonney)\r\n            setPlayerCrypto(0)\r\n            dynamicValues.playerCrypto = 0\r\n            setSellShort('Buy Short')\r\n            dynamicValues.sellShort = 'Buy Short'\r\n            setLongSell('Buy Long')\r\n            dynamicValues.longSell = 'Buy Long'\r\n            setOrderPrice(0)\r\n            dynamicValues.orderPrice = 0\r\n        } else if (dynamicValues.playerMonney > 0 && playerCrypto === 0) {\r\n            dynamicValues.playerCurrentFee = (dynamicValues.playerMonney * dynamicValues.fee)\r\n            const transactionResult = -(dynamicValues.playerMonney - (dynamicValues.playerMonney * dynamicValues.fee)) / currentPrice\r\n            setPlayerCrypto(transactionResult)\r\n            dynamicValues.playerCrypto = transactionResult\r\n            dynamicValues.playerMonney = 0\r\n            setPlayerMonney(0)\r\n            setSellShort('')\r\n            dynamicValues.sellShort = ''\r\n            setLongSell('Sell')\r\n            dynamicValues.longSell = 'Sell'\r\n            setOrderPrice(currentPrice)\r\n            dynamicValues.orderPrice = currentPrice\r\n        }\r\n    }\r\n    const returnMenu = () => {\r\n        endGame(setStateDatas, dynamicValues, navigate)\r\n    }\r\n    return (\r\n        <main className=\" playground-main\">\r\n            <section>\r\n                <div className=\"playground-top\">\r\n                    <h2 className=\"current-price\">current price :{currentPrice}$</h2>\r\n                    <h2 className={\"order \" + flagColor}  >Order at : {orderPrice}</h2>\r\n                    <h2 className=\"gain\" >Gain : {gain}$</h2>\r\n                </div>\r\n                <div className=\"playground-top\">\r\n                    <h2 className=\"user-money\">monney : {playerMonney} $ / {playerCrypto} {stateDatas.cryptoUnit}</h2>\r\n                    <h2> fee : 0.004% </h2>\r\n                    <div className=\"playground-index-menu\"><h2 className=\"index\">{drawIndex}/9500  </h2><div className=\"return-btn btn\" onClick={returnMenu}>Menu</div>\r\n                </div></div>\r\n            </section>\r\n            <div className=\"chart\">\r\n                <canvas id=\"line-chart\" width={graphDisplay.width+\"px\"} height={graphDisplay.height+\"px\"}></canvas>\r\n            </div>\r\n            <section className=\"buy-sell\">\r\n            \r\n                <div className=\"sell-btn btn\" onClick={longOrSell}>{longSell}</div>\r\n                <div className=\"buy-btn btn\" onClick={shortOrSell}>{sellShort}</div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Playground;\r\n","import React, { useState } from 'react';\nimport{\n  BrowserRouter,\nRoutes,\nRoute,\nHashRouter,\n} from \"react-router-dom\";\nimport Menu from './composants/Pages/Menu';\nimport Playground from './composants/Pages/Playground';\nimport './style/style.css'\n\nexport const Switch = () => {\n  const [stateDatas , setStateDatas] = useState({playerMonney : 1000 ,cryptoUnit : 'bitcoin'}) //state data array for entire application\n  return (\n      <>\n      <Routes>\n        <Route path=\"/\" element={<Menu stateDatas={stateDatas} setStateDatas ={setStateDatas} />} />\n        <Route path=\"/playground\" element={<Playground  stateDatas={stateDatas} setStateDatas ={setStateDatas}  />} />\n      </Routes>\n      </>\n  )\n};\nfunction App() {\n  \n  return (\n    <HashRouter>\n      <Switch />\n    </HashRouter>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}